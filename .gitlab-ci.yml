variables:
    KUBE_CONTEXT: foujbali/deploy_app_helm_k8s:k8s-connection

stages:
    - pre-build
    - build
    - deploy
    - destroy

Extract-Data:
    stage: pre-build
    image: python
    script:
        - echo PACKAGE_VERSION=$(python3 $CI_PROJECT_DIR/utils/package-name.py) >> build.env
        - echo PACKAGE_NAME=$(python3 $CI_PROJECT_DIR/utils/chart-name.py) >> build.env
    artifacts:
        reports:
            dotenv: build.env

Publish-Helm-Package:
    stage: build
    image:
        name: alpine/helm:3.14.0
        entrypoint: ['']
    script:
        - echo $PACKAGE_VERSION
        - echo $PACKAGE_NAME
        - helm package $CI_PROJECT_DIR/$PACKAGE_NAME
        - 'curl --request POST --form "chart=@${PACKAGE_VERSION}" --user gitlab-ci-token:$CI_REGISTRY_PASSWORD "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"'

Deploy-Helm-Chart:
    stage: deploy
    image:
        name: dtzar/helm-kubectl
        entrypoint: ['']
    script:
        - kubectl config get-contexts
        - kubectl config use-context $KUBE_CONTEXT
        - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD login-app-project "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable"
        - helm repo update
        - helm upgrade --install ${PACKAGE_NAME} login-app-project/${PACKAGE_NAME}
        - kubectl get pods
        - kubectl get svc 

Destroy-Helm-Chart:
    stage: destroy
    image:
        name: dtzar/helm-kubectl
        entrypoint: ['']
    script:
        - kubectl config use-context $KUBE_CONTEXT
        - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD login-app-project "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable"
        - helm repo update
        - helm uninstall ${PACKAGE_NAME}
        - kubectl get pods
        - kubectl get svc 
    when: manual                  

.build_image:
    stage: build
    image: docker
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $CI_REGISTRY/foujbali/deploy_app_helm_k8s/loginapp:v1 .
        - docker push $CI_REGISTRY/foujbali/deploy_app_helm_k8s/loginapp:v1
